{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/battleship-chan-tom/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = click => {\n      if (this.state.gameOver === false) {\n        if (this.state.grid[click] === \"white\") {\n          this.setState({\n            grid: this.state.grid.map((value, index) => {\n              if (click == index) {\n                return \"red\";\n              } else return value;\n            }),\n            torpedoCount: this.state.torpedoCount - 1\n          });\n        }\n\n        if (this.state.battleships[click] === 1) {\n          this.setState({\n            shipsRemaining: this.state.shipsRemaining - 1\n          });\n        }\n      }\n    };\n\n    this.checkWinner = () => {\n      if (this.state.shipsRemaining === 0 && this.state.winText === false) {\n        this.setState({\n          winText: true\n        });\n      } else if (this.state.torpedoCount === 0 && this.state.gameOver === false) {\n        this.setState({\n          gameOver: true\n        });\n      }\n    };\n\n    this.state = {\n      grid: [\"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\"],\n      battleships: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      torpedoCount: 25,\n      shipsRemaining: 24,\n      winText: false,\n      gameOver: false\n    };\n  }\n\n  componentDidMount() {\n    let currentArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let forbiddenArray = [];\n    let oneShipCount = 5;\n\n    while (oneShipCount > 0) {\n      let random = Math.floor(Math.random() * 100);\n\n      if (!forbiddenArray.includes(random)) {\n        currentArray[random] = 1;\n        forbiddenArray.push(random);\n\n        if (random - 10 >= 0) {\n          forbiddenArray.push(random - 10);\n        }\n\n        if (random + 10 < 100) {\n          forbiddenArray.push(random + 10);\n        }\n\n        if (Math.floor((random - 1) / 10) === Math.floor(random / 10)) {\n          forbiddenArray.push(random - 1);\n        }\n\n        if (Math.floor((random + 1) / 10) === Math.floor(random / 10)) {\n          forbiddenArray.push(random + 1);\n        }\n\n        oneShipCount--;\n      }\n    }\n\n    console.log(currentArray);\n    console.log(forbiddenArray);\n    this.setState({\n      battleships: currentArray\n    });\n  }\n\n  render() {\n    let grid = this.state.grid.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        index: index,\n        value: value,\n        grid: this.state.grid,\n        handleChange: this.handleChange,\n        battleships: this.state.battleships,\n        gameOver: this.state.gameOver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, this.checkWinner(), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Battleship App\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, grid)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \" YOU HAVE \", this.state.torpedoCount, \" TORPEDOS REMAINING\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \" THERE ARE \", this.state.shipsRemaining, \" SHIPS REMAINING\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \" \", this.state.winText && \"YOU HAVE SUNK ALL THE SHIPS. YOU HAVE WON.\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, this.state.gameOver && \"YOU COULD NOT FIND ALL THE SHIPS. GAME OVER - YOU LOSE.\", \" \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/battleship-chan-tom/src/App.js"],"names":["React","Component","Square","App","constructor","props","handleChange","click","state","gameOver","grid","setState","map","value","index","torpedoCount","battleships","shipsRemaining","checkWinner","winText","componentDidMount","currentArray","forbiddenArray","oneShipCount","random","Math","floor","includes","push","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      grid:[\"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\"],\n      battleships: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      torpedoCount: 25,\n      shipsRemaining: 24,\n      winText: false,\n      gameOver: false\n    }\n  }\n\n  handleChange = (click) =>  {\n    if (this.state.gameOver === false){\n      if (this.state.grid[click] === \"white\") {\n        this.setState({grid: this.state.grid.map((value,index) => {\n          if (click == index) {\n            return \"red\"\n          } else return value;\n        }), torpedoCount: this.state.torpedoCount - 1})\n      }\n      if (this.state.battleships[click] === 1)  {\n        this.setState({ shipsRemaining: this.state.shipsRemaining - 1})\n      }\n    }\n  }\n\n  checkWinner = () => {\n    if (this.state.shipsRemaining === 0 && this.state.winText === false)  {\n      this.setState({winText: true})\n    } else if (this.state.torpedoCount === 0 && this.state.gameOver === false) {\n      this.setState({gameOver: true})\n    }\n  }\n\n  componentDidMount() {\n    let currentArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    let forbiddenArray = []\n    let oneShipCount = 5\n\n    while (oneShipCount > 0)  {\n      let random = Math.floor(Math.random() * 100)\n      if (!forbiddenArray.includes(random)) {\n        currentArray[random] = 1;\n        forbiddenArray.push(random);\n        if (random - 10 >= 0){\n          forbiddenArray.push(random-10)}\n        if (random + 10 < 100){\n          forbiddenArray.push(random+10)}\n        if (Math.floor((random - 1)/10) === Math.floor(random /10)){\n          forbiddenArray.push(random-1)}\n        if (Math.floor((random + 1)/10) === Math.floor(random /10)){\n          forbiddenArray.push(random+1)}\n        oneShipCount--;\n      }\n    }\n\n    console.log(currentArray)\n    console.log(forbiddenArray)\n    this.setState({battleships: currentArray})\n  }\n\n  render(){\n    let grid = this.state.grid.map((value,index)=> {\n      return (\n        <Square\n          index = {index}\n          value = {value}\n          grid = {this.state.grid}\n          handleChange = {this.handleChange}\n          battleships = {this.state.battleships}\n          gameOver = {this.state.gameOver}\n        />\n      )\n    })\n    return(\n      <React.Fragment>\n      {this.checkWinner()}\n        <h1>Battleship App</h1>\n        <div id=\"holder\">\n          <div id=\"grid\">\n            { grid }\n          </div>\n        </div>\n        <p> YOU HAVE {this.state.torpedoCount} TORPEDOS REMAINING</p>\n       \n        <p> THERE ARE {this.state.shipsRemaining} SHIPS REMAINING</p>\n        <p> { this.state.winText && \"YOU HAVE SUNK ALL THE SHIPS. YOU HAVE WON.\" } </p>\n        <p>{ this.state.gameOver && \"YOU COULD NOT FIND ALL THE SHIPS. GAME OVER - YOU LOSE.\" } </p>\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}